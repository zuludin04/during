// Mocks generated by Mockito 5.3.0 from annotations
// in during/test/data/during_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:during/data/source/during_db_provider.dart' as _i5;
import 'package:during/data/source/entity/budget_entity.dart' as _i8;
import 'package:during/data/source/entity/category_entity.dart' as _i4;
import 'package:during/data/source/entity/saving_entity.dart' as _i3;
import 'package:during/data/source/entity/transaction_entity.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeSavingEntity_1 extends _i1.SmartFake implements _i3.SavingEntity {
  _FakeSavingEntity_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeCategoryEntity_2 extends _i1.SmartFake
    implements _i4.CategoryEntity {
  _FakeCategoryEntity_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [DuringDbProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockDuringDbProvider extends _i1.Mock implements _i5.DuringDbProvider {
  MockDuringDbProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Database> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: _i6.Future<_i2.Database>.value(
                  _FakeDatabase_0(this, Invocation.getter(#database))))
          as _i6.Future<_i2.Database>);
  @override
  _i6.Future<int> saveTransaction(_i7.TransactionEntity? transaction) =>
      (super.noSuchMethod(Invocation.method(#saveTransaction, [transaction]),
          returnValue: _i6.Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<void> deleteTransaction(int? id) => (super.noSuchMethod(
      Invocation.method(#deleteTransaction, [id]),
      returnValue: _i6.Future<void>.value(),
      returnValueForMissingStub: _i6.Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> updateTransaction(_i7.TransactionEntity? transaction) =>
      (super.noSuchMethod(Invocation.method(#updateTransaction, [transaction]),
              returnValue: _i6.Future<void>.value(),
              returnValueForMissingStub: _i6.Future<void>.value())
          as _i6.Future<void>);
  @override
  _i6.Future<List<_i7.TransactionEntity>> loadDuringTransactions() =>
      (super.noSuchMethod(Invocation.method(#loadDuringTransactions, []),
              returnValue: _i6.Future<List<_i7.TransactionEntity>>.value(
                  <_i7.TransactionEntity>[]))
          as _i6.Future<List<_i7.TransactionEntity>>);
  @override
  _i6.Future<List<_i7.TransactionEntity>> loadDailyTransactions(
          int? start, int? end) =>
      (super.noSuchMethod(
              Invocation.method(#loadDailyTransactions, [start, end]),
              returnValue: _i6.Future<List<_i7.TransactionEntity>>.value(
                  <_i7.TransactionEntity>[]))
          as _i6.Future<List<_i7.TransactionEntity>>);
  @override
  _i6.Future<List<_i7.TransactionEntity>> loadSavingTransactions(
          int? savingId) =>
      (super.noSuchMethod(
              Invocation.method(#loadSavingTransactions, [savingId]),
              returnValue: _i6.Future<List<_i7.TransactionEntity>>.value(
                  <_i7.TransactionEntity>[]))
          as _i6.Future<List<_i7.TransactionEntity>>);
  @override
  _i6.Future<int> totalIncome(int? start, int? end) =>
      (super.noSuchMethod(Invocation.method(#totalIncome, [start, end]),
          returnValue: _i6.Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<int> totalExpense(int? start, int? end) =>
      (super.noSuchMethod(Invocation.method(#totalExpense, [start, end]),
          returnValue: _i6.Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<void> insertSaving(_i3.SavingEntity? saving) =>
      (super.noSuchMethod(Invocation.method(#insertSaving, [saving]),
              returnValue: _i6.Future<void>.value(),
              returnValueForMissingStub: _i6.Future<void>.value())
          as _i6.Future<void>);
  @override
  _i6.Future<List<_i3.SavingEntity>> loadSavings() => (super.noSuchMethod(
          Invocation.method(#loadSavings, []),
          returnValue:
              _i6.Future<List<_i3.SavingEntity>>.value(<_i3.SavingEntity>[]))
      as _i6.Future<List<_i3.SavingEntity>>);
  @override
  _i6.Future<_i3.SavingEntity> loadSingleSaving(int? id) => (super.noSuchMethod(
          Invocation.method(#loadSingleSaving, [id]),
          returnValue: _i6.Future<_i3.SavingEntity>.value(_FakeSavingEntity_1(
              this, Invocation.method(#loadSingleSaving, [id]))))
      as _i6.Future<_i3.SavingEntity>);
  @override
  _i6.Future<void> updateSavingBalance(int? savingId, int? balance) =>
      (super.noSuchMethod(
              Invocation.method(#updateSavingBalance, [savingId, balance]),
              returnValue: _i6.Future<void>.value(),
              returnValueForMissingStub: _i6.Future<void>.value())
          as _i6.Future<void>);
  @override
  _i6.Future<void> updateSaving(_i3.SavingEntity? saving) =>
      (super.noSuchMethod(Invocation.method(#updateSaving, [saving]),
              returnValue: _i6.Future<void>.value(),
              returnValueForMissingStub: _i6.Future<void>.value())
          as _i6.Future<void>);
  @override
  _i6.Future<List<_i7.TransactionEntity>> filterTransactions(String? query) =>
      (super.noSuchMethod(Invocation.method(#filterTransactions, [query]),
              returnValue: _i6.Future<List<_i7.TransactionEntity>>.value(
                  <_i7.TransactionEntity>[]))
          as _i6.Future<List<_i7.TransactionEntity>>);
  @override
  _i6.Future<void> deleteSaving(int? id) => (super.noSuchMethod(
      Invocation.method(#deleteSaving, [id]),
      returnValue: _i6.Future<void>.value(),
      returnValueForMissingStub: _i6.Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> deleteSavingTransactions(
          List<_i7.TransactionEntity>? transactions) =>
      (super.noSuchMethod(
              Invocation.method(#deleteSavingTransactions, [transactions]),
              returnValue: _i6.Future<void>.value(),
              returnValueForMissingStub: _i6.Future<void>.value())
          as _i6.Future<void>);
  @override
  _i6.Future<void> addInitialCategory() => (super.noSuchMethod(
      Invocation.method(#addInitialCategory, []),
      returnValue: _i6.Future<void>.value(),
      returnValueForMissingStub: _i6.Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<List<_i4.CategoryEntity>> loadCategories() =>
      (super.noSuchMethod(Invocation.method(#loadCategories, []),
          returnValue: _i6.Future<List<_i4.CategoryEntity>>.value(
              <_i4.CategoryEntity>[])) as _i6.Future<List<_i4.CategoryEntity>>);
  @override
  _i6.Future<List<_i4.CategoryEntity>> loadCategoryByType(int? type) =>
      (super.noSuchMethod(Invocation.method(#loadCategoryByType, [type]),
          returnValue: _i6.Future<List<_i4.CategoryEntity>>.value(
              <_i4.CategoryEntity>[])) as _i6.Future<List<_i4.CategoryEntity>>);
  @override
  _i6.Future<void> insertCategory(_i4.CategoryEntity? category) =>
      (super.noSuchMethod(Invocation.method(#insertCategory, [category]),
              returnValue: _i6.Future<void>.value(),
              returnValueForMissingStub: _i6.Future<void>.value())
          as _i6.Future<void>);
  @override
  _i6.Future<void> deleteCategory(int? id) => (super.noSuchMethod(
      Invocation.method(#deleteCategory, [id]),
      returnValue: _i6.Future<void>.value(),
      returnValueForMissingStub: _i6.Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> updateCategory(_i4.CategoryEntity? category) =>
      (super.noSuchMethod(Invocation.method(#updateCategory, [category]),
              returnValue: _i6.Future<void>.value(),
              returnValueForMissingStub: _i6.Future<void>.value())
          as _i6.Future<void>);
  @override
  _i6.Future<_i4.CategoryEntity> loadSingleCategory(int? categoryId) =>
      (super.noSuchMethod(Invocation.method(#loadSingleCategory, [categoryId]),
              returnValue: _i6.Future<_i4.CategoryEntity>.value(
                  _FakeCategoryEntity_2(this,
                      Invocation.method(#loadSingleCategory, [categoryId]))))
          as _i6.Future<_i4.CategoryEntity>);
  @override
  _i6.Future<void> addBudgeting(_i8.BudgetEntity? budget) =>
      (super.noSuchMethod(Invocation.method(#addBudgeting, [budget]),
              returnValue: _i6.Future<void>.value(),
              returnValueForMissingStub: _i6.Future<void>.value())
          as _i6.Future<void>);
  @override
  _i6.Future<void> deleteBudget(int? budgetId) => (super.noSuchMethod(
      Invocation.method(#deleteBudget, [budgetId]),
      returnValue: _i6.Future<void>.value(),
      returnValueForMissingStub: _i6.Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> updateBudget(_i8.BudgetEntity? budget) =>
      (super.noSuchMethod(Invocation.method(#updateBudget, [budget]),
              returnValue: _i6.Future<void>.value(),
              returnValueForMissingStub: _i6.Future<void>.value())
          as _i6.Future<void>);
  @override
  _i6.Future<void> insertTransactionBudget(int? transactionId, int? budgetId) =>
      (super.noSuchMethod(
              Invocation.method(
                  #insertTransactionBudget, [transactionId, budgetId]),
              returnValue: _i6.Future<void>.value(),
              returnValueForMissingStub: _i6.Future<void>.value())
          as _i6.Future<void>);
  @override
  _i6.Future<List<_i8.BudgetEntity>> loadBudgets() => (super.noSuchMethod(
          Invocation.method(#loadBudgets, []),
          returnValue:
              _i6.Future<List<_i8.BudgetEntity>>.value(<_i8.BudgetEntity>[]))
      as _i6.Future<List<_i8.BudgetEntity>>);
  @override
  _i6.Future<List<_i7.TransactionEntity>> loadBudgetTransactions(
          int? budgetId) =>
      (super.noSuchMethod(
              Invocation.method(#loadBudgetTransactions, [budgetId]),
              returnValue: _i6.Future<List<_i7.TransactionEntity>>.value(
                  <_i7.TransactionEntity>[]))
          as _i6.Future<List<_i7.TransactionEntity>>);
  @override
  _i6.Future<void> deleteAllData() => (super.noSuchMethod(
      Invocation.method(#deleteAllData, []),
      returnValue: _i6.Future<void>.value(),
      returnValueForMissingStub: _i6.Future<void>.value()) as _i6.Future<void>);
}
